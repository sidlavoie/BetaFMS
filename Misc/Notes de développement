Arena = classe. --> objet créé à chaque match

IMPORTANT: regarder la fonction de génération d'horaire... elle ne semble pas dropper la table correctement/horaire incomplet

Pyhton multiprocessing
  créer fonction
  créer processus (process=Process(target=fonction))
  process.start()
  start_method = multiprocessing.set_start_method("spawn")
  
  Port UDP 1121 pour envoi de packets
  Port UDP 1160 pour Reception
  Port TCP 1750 pour écoute
  
  VOIR field/driver_station_connexion ligne 154 pour packets envoyés à DS
  VOIR game/rule ????
  
 

  Packet de contrôle FRC
  BYTES
  0-1 numéro de packet, big-endian, deux bytes
  2 version de protocole = 0
  3 status (Auto = 0x02, Enabled = 0x04, Estop = 0x80)
  4 inconnu = 0
  5 station d'alliance
  6 type de match (pratique = 1, qualification = 2, elimination = 3 sinon = 0)
  7-8 numéro de match (big-endian. sinon 7=0, 8=1)
  9 numéro de répétition du match
  10 - 19 temps (en commençant par les nanosecondes)
  20 - 21 nombre de temps restant au match (big endian)

  Packet de status DS
  BYTES


Créer encodage packet dans class DriverStation
Créer envoi packet dans class DriverStation

Il est possible de juste spécifier le nom de l'image tant qu'elle est dans www/static/images
Il est impératif que l'image soit dans www/static/images
